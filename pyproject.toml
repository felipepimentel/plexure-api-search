[tool.poetry]
name = "plexure-api-search"
version = "0.1.0"
description = "Semantic search engine for API endpoints"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.24.0"
scikit-learn = "^1.3.0"
sentence-transformers = "^2.2.2"
pinecone-client = "^2.2.2"
pyzmq = "^25.1.1"
rich = "^13.5.2"
textual = "^0.38.1"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"
dependency-injector = "^4.41.0"
spacy = "^3.6.1"
pyspellchecker = "^0.7.2"
rapidfuzz = "^3.3.0"
faiss-cpu = "^1.7.4"

[tool.poetry.dev-dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.1"
pylint = "^2.17.5"
pre-commit = "^3.3.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
plexure-api-search = "plexure_api_search.__main__:main"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0511",  # fixme
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=plexure_api_search --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test", "Describe"]
python_functions = ["test_*", "it_*", "they_*"]
asyncio_mode = "auto"
