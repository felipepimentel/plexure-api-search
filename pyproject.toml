[tool.poetry]
name = "plexure-api-search"
version = "0.1.0"
description = "Semantic search engine for API contracts"
authors = ["Plexure <dev@plexure.com>"]
readme = "README.md"
packages = [{ include = "plexure_api_search" }]

[tool.poetry.dependencies]
python = "3.12"
sentence-transformers = "^3.3.1"
pinecone-client = "^5.0.1"
httpx = "^0.28.1"
rich = "^13.0.0"
pyyaml = "^6.0.0"
numpy = "^2.2.0"
pandas = "^2.2.3"
scikit-learn = "^1.0.0"
diskcache = "^5.2.0"
python-dotenv = "^1.0.0"
psutil = "^6.1.0"
prometheus-client = "^0.21.1"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
isort = "^5.10.0"

[tool.poetry.scripts]
plexure-api-search = "plexure_api_search.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=plexure_api_search --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
